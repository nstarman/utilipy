[metadata]
name = utilipy
author = Nathaniel Starkman
author_email = n.starkman@mail.utoronto.ca
license = BSD 3-Clause
license_file = licenses/LICENSE.rst
url = https://utilipy.readthedocs.io
description = Python grab-bag.
long_description = file: README.rst
long_description_content_type = text/x-rst
edit_on_github = False
github_project = nstarman/utilipy

[options]
zip_safe = False
packages = find:
python_requires = >=3.6
setup_requires = setuptools_scm
install_requires =
    astropy
    ipython
    matplotlib
    numpy
    pandas
    plotly
    pytest < 6.0
    PyYAML
    scipy
    tqdm
    typing_extensions
    wrapt

[options.extras_require]
test =
    pytest-astropy
    pytest_astropy_header
    dill
docs =
    sphinx-astropy
    nbsphinx
    jupyter_client
    easydev
    sphinxcontrib-bibtex
fitting = 
    scipy
    lmfit
amuse = 
    amuse-framework
    amuse-bhtree
    amuse-seba
pickle =
    dill
galpy = 
    galpy


[options.package_data]
* = */data/*, */data/*/*
utilipy.astro.instruments.filtertransforms.MegaCam_PanSTARR = data/*
utilipy.constants = data/*
utilipy.data_utils = data/*

[tool:pytest]
minversion = 3.6
testpaths = "utilipy" "docs"
norecursedirs = */utilipy/extern/*
astropy_header = false
text_file_format = rst
doctest_plus = enabled
doctest_norecursedirs=*/utilipy/extern/*
addopts = --doctest-rst

[coverage:run]
omit =
    utilipy/_astropy_init*
    utilipy/conftest.py
    utilipy/*setup_package*
    utilipy/tests/*
    utilipy/*/tests/*
    utilipy/extern/*
    utilipy/version*
    */utilipy/_astropy_init*
    */utilipy/conftest.py
    */utilipy/*setup_package*
    */utilipy/tests/*
    */utilipy/*/tests/*
    */utilipy/extern/*
    */utilipy/version*

[coverage:report]
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
    # Don't complain about packages we have installed
    except ImportError
    # Don't complain if tests don't hit assertions
    raise AssertionError
    raise NotImplementedError
    # Don't complain about script hooks
    def main\(.*\):
    # Ignore branches that don't pertain to this version of Python
    pragma: py{ignore_python_version}
    # Don't complain about IPython completion helper
    def _ipython_key_completions_
